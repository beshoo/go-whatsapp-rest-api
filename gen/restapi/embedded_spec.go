// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Whatsapp Rest API, you will need to scan the qr code using or your own front end or you could use this [ScanQR](/qrcode) link.\n You can download the code [here](/qrcode.zip)\n\n To recieve message you will need to create your own server and set its url as hook using this [API](/#/Profile/setHook) as shown in hook [definitions](/#/Hooks).\nYou can download a sample nodejs server [here](/test-wa-handler-server.zip)\n\n \u003cb\u003ePS:\u003c/b\u003e Phone numbers should have country code without the \u003cb\u003e+\u003c/b\u003e sign eg: \u003cb\u003e14049190651\u003c/b\u003e not \u003cb\u003e+14049190651\u003c/b\u003e",
    "title": "Wa-Api",
    "version": "0.1.0"
  },
  "basePath": "/api",
  "paths": {
    "/message/audio": {
      "post": {
        "description": "Audio message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Audio message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageAudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/contact": {
      "post": {
        "description": "Contact message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Contact message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/doc": {
      "post": {
        "description": "Doc message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Doc message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/image": {
      "post": {
        "description": "Image message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Image message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/livelocation": {
      "post": {
        "description": "Live Location message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Location message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageLiveLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/location": {
      "post": {
        "description": "Location message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Location message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/text": {
      "post": {
        "description": "Text message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Text message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/video": {
      "post": {
        "description": "Video message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Video message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageVideo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/notify/connectivity": {
      "post": {
        "description": "Notify when phone is not connected",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "when the user logs out",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NotifyConnectivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/notify/logout": {
      "post": {
        "description": "Notify when user logs out",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "when the user logs out",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NotifyLogout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/notify/receive": {
      "post": {
        "description": "Notify when user receive the message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "when the user logs receive the message",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NotifyReceive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/number/{phoneNumber}/avatar": {
      "get": {
        "tags": [
          "Number"
        ],
        "operationId": "GetAvatar",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile Data",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/number/{phoneNumber}/chats": {
      "get": {
        "description": "Get chats for specific number",
        "tags": [
          "Number"
        ],
        "operationId": "getChats",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "the number of messages in one query, max 300",
            "name": "numberOfMessages",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "suppy this to load messages before this messageId",
            "name": "beforeMessageId",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "fromMe needs to be supplied if beforeMessagId is given",
            "name": "fromMe",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return chats for the specific",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChatItem"
              }
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/number/{phoneNumber}/haswhatsapp": {
      "get": {
        "tags": [
          "Number"
        ],
        "operationId": "hasWhatsApp",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if the number has whatsapp",
            "schema": {
              "type": "object",
              "required": [
                "hasWhatsApp"
              ],
              "properties": {
                "hasWhatsApp": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/number/{phoneNumber}/online": {
      "get": {
        "tags": [
          "Number"
        ],
        "operationId": "isOnline",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return if the user is online",
            "schema": {
              "type": "object",
              "required": [
                "isOnline"
              ],
              "properties": {
                "isOnline": {
                  "type": "boolean"
                },
                "lastSeen": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/power/battery": {
      "post": {
        "description": "Contact message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Contact message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageBattery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/profile/contacts": {
      "get": {
        "description": "Get Contacts for the user",
        "tags": [
          "Profile"
        ],
        "operationId": "getContacts",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts for user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactItem"
              }
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/hook/set": {
      "post": {
        "description": "Set Hook for callbacks, refer hooks section for all hooks which will be called",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "setHook",
        "parameters": [
          {
            "$ref": "#/parameters/sessionIdParam"
          },
          {
            "type": "string",
            "format": "uri",
            "name": "hookURL",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/logout": {
      "post": {
        "description": "The user will be logged out with his session cleared from DB, you will need to rescan and reset the webhook to reconnect the user",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "logout",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/me": {
      "get": {
        "description": "Get Scanned users profile pic and his phone number",
        "tags": [
          "Profile"
        ],
        "operationId": "profile",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile Data",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/phone/connect": {
      "post": {
        "description": "Connect using Session Id used while succesfull scan",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "connect",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/phone/disconnect": {
      "post": {
        "description": "Disconnect Session Id used while succesfull scan",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "disconnect",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/phone/isconnected": {
      "get": {
        "description": "Return true if users phone is connected to internet and whats app web",
        "tags": [
          "Profile"
        ],
        "operationId": "isConnected",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if the number has whatsapp",
            "schema": {
              "type": "object",
              "required": [
                "isConnected"
              ],
              "properties": {
                "isConnected": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/profile/scanqr": {
      "post": {
        "description": "Create a \u003cb\u003eUUID4\u003c/b\u003e identifier to use as sessionId. you will need to use this for every subsequent call, or use this [ScanQR](/qrcode) link",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "scanQr",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id will used associate with phonenumber scanned, use UUID4",
            "name": "sessionId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "uri",
            "description": "proxy host url",
            "name": "proxyURL",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Base64 string",
            "schema": {
              "$ref": "#/definitions/QRCode"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/ack/read": {
      "post": {
        "description": "Send Read Reciept",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendRead",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReadAck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return chats for the specific"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/audio": {
      "post": {
        "description": "Send audio message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendAudio",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudioMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/audiorecord": {
      "post": {
        "description": "Send audio record message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendAudioRecord",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudioMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/doc": {
      "post": {
        "description": "Send doc message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendDoc",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/image": {
      "post": {
        "description": "Send Image Message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendImage",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/link": {
      "post": {
        "description": "Send Link Preview",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "SendLink",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/location": {
      "post": {
        "description": "Send location message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendLocation",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/text": {
      "post": {
        "description": "Send text message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendText",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/vcard": {
      "post": {
        "description": "Send SendVcard Document",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "SendVcard",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/send/video": {
      "post": {
        "description": "Send video message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendVideo",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VideoMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AudioMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "audio",
        "numberReplyIds"
      ],
      "properties": {
        "audio": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://file-examples.com/wp-content/uploads/2017/11/file_example_MP3_700KB.mp3"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "BroadcastStatus": {
      "type": "object",
      "properties": {
        "broadcastId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "processing",
            "sent"
          ]
        }
      }
    },
    "ChatItem": {
      "type": "object",
      "properties": {
        "audio": {
          "type": "string"
        },
        "audioLength": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "doc": {
          "type": "string"
        },
        "docTitle": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "imageThumb": {
          "type": "string"
        },
        "messageContext": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "messageType": {
          "type": "string",
          "enum": [
            "TEXT",
            "IMAGE",
            "VIDEO",
            "AUDIO",
            "DOC",
            "LOCATION"
          ]
        },
        "pageCount": {
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "video": {
          "type": "string"
        },
        "videoThumb": {
          "type": "string"
        }
      }
    },
    "ContactItem": {
      "type": "object",
      "required": [
        "number",
        "name"
      ],
      "properties": {
        "name": {
          "description": "Contact Name",
          "type": "string"
        },
        "number": {
          "description": "Number with country code but without plus",
          "type": "string",
          "example": "14049190651"
        }
      }
    },
    "ContactMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "displayName",
        "number",
        "numberReplyIds"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "DocMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "doc",
        "title",
        "docType"
      ],
      "properties": {
        "doc": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
        },
        "docType": {
          "type": "string",
          "enum": [
            "DOC",
            "DOCX",
            "CSV",
            "XLS",
            "XLSX",
            "PDF",
            "PPT",
            "PPTX",
            "GZ",
            "ZIP",
            "7z",
            "TEXT"
          ]
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ImageMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "image",
        "numberReplyIds"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "image": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://cdn.pixabay.com/photo/2019/11/08/11/56/cat-4611189__340.jpg"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "LinkMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "title",
        "text",
        "url",
        "imageurl",
        "description",
        "messagetype",
        "numberReplyIds"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "imageurl": {
          "type": "string"
        },
        "messagetype": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "LocationMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "lat",
        "lng",
        "numberReplyIds"
      ],
      "properties": {
        "lat": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "MessageAudio": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "audio"
      ],
      "properties": {
        "audio": {
          "type": "string"
        },
        "audioLength": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        }
      }
    },
    "MessageBattery": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "plugged",
        "powersave",
        "percentage"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "plugged": {
          "type": "boolean"
        },
        "powersave": {
          "type": "boolean"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "MessageContact": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "displayName": {
          "type": "string"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "vcard": {
          "type": "string"
        }
      }
    },
    "MessageContext": {
      "type": "object",
      "required": [
        "isForwarded"
      ],
      "properties": {
        "isForwarded": {
          "type": "boolean"
        },
        "participant": {
          "type": "string"
        },
        "productMessageCurrencyCode": {
          "type": "string"
        },
        "productMessageDescription": {
          "type": "string"
        },
        "productMessageId": {
          "type": "string"
        },
        "productMessagePrice": {
          "type": "string"
        },
        "productMessageRetailerId": {
          "type": "string"
        },
        "productMessageTitle": {
          "type": "string"
        },
        "productMessageType": {
          "type": "boolean"
        },
        "productMessageUrl": {
          "type": "string"
        },
        "quotedMessageId": {
          "type": "string"
        }
      }
    },
    "MessageDoc": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "doc": {
          "type": "string"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "pageCount": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MessageImage": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "thumbnail",
        "image"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "image": {
          "type": "string"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "MessageInfo": {
      "type": "object",
      "required": [
        "fromMe",
        "from",
        "to",
        "messageId",
        "owner"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "fromMe": {
          "type": "boolean"
        },
        "messageId": {
          "type": "string"
        },
        "owner": {
          "type": "object",
          "required": [
            "number",
            "sessionId"
          ],
          "properties": {
            "number": {
              "type": "string"
            },
            "sessionId": {
              "type": "string"
            }
          }
        },
        "pushName": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "MessageItem": {
      "type": "object",
      "required": [
        "id",
        "fromMe"
      ],
      "properties": {
        "fromMe": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "MessageLiveLocation": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "accuracyMeters": {
          "type": "integer",
          "format": "int32"
        },
        "caption": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "degreesClockwiseFromMagneticNorth": {
          "type": "integer",
          "format": "int32"
        },
        "latitudeDegree": {
          "type": "number"
        },
        "longituteDegree": {
          "type": "number"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "speedMPH": {
          "type": "number"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "MessageLocation": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "latitudeDegree": {
          "type": "number"
        },
        "longituteDegree": {
          "type": "number"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MessageText": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "text"
      ],
      "properties": {
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "MessageVideo": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "thumbnail",
        "video"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "thumbnail": {
          "type": "string"
        },
        "video": {
          "type": "string"
        }
      }
    },
    "NotifyConnectivity": {
      "type": "object",
      "required": [
        "isConnected",
        "sessionId",
        "number"
      ],
      "properties": {
        "isConnected": {
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "NotifyLogout": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "timestamp"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NotifyReceive": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "to",
        "timestamp"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "NumberReplyIds": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "number": {
          "description": "Number with country code but without plus",
          "type": "string",
          "example": "14049190651"
        },
        "replyTo": {
          "$ref": "#/definitions/MessageItem"
        }
      }
    },
    "Profile": {
      "type": "object",
      "required": [
        "phoneNumber"
      ],
      "properties": {
        "phoneNumber": {
          "type": "string"
        },
        "profilePic": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "QRCode": {
      "type": "object",
      "properties": {
        "base64": {
          "type": "string"
        }
      }
    },
    "ReadAck": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "messageId"
      ],
      "properties": {
        "messageId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "TextMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "text",
        "numberReplyIds"
      ],
      "properties": {
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "VideoMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "video",
        "numberReplyIds"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "video": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_480_1_5MG.mp4"
        },
        "videoThumbnail": {
          "description": "Fully qualified url for thumbnail",
          "type": "string",
          "format": "uri"
        }
      }
    }
  },
  "parameters": {
    "sessionIdParam": {
      "type": "string",
      "format": "uuid4",
      "name": "sessionId",
      "in": "formData",
      "required": true
    }
  },
  "responses": {
    "ErrorResponse": {
      "description": "Error Response",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Whatsapp Rest API, you will need to scan the qr code using or your own front end or you could use this [ScanQR](/qrcode) link.\n You can download the code [here](/qrcode.zip)\n\n To recieve message you will need to create your own server and set its url as hook using this [API](/#/Profile/setHook) as shown in hook [definitions](/#/Hooks).\nYou can download a sample nodejs server [here](/test-wa-handler-server.zip)\n\n \u003cb\u003ePS:\u003c/b\u003e Phone numbers should have country code without the \u003cb\u003e+\u003c/b\u003e sign eg: \u003cb\u003e14049190651\u003c/b\u003e not \u003cb\u003e+14049190651\u003c/b\u003e",
    "title": "Wa-Api",
    "version": "0.1.0"
  },
  "basePath": "/api",
  "paths": {
    "/message/audio": {
      "post": {
        "description": "Audio message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Audio message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageAudio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/contact": {
      "post": {
        "description": "Contact message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Contact message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/doc": {
      "post": {
        "description": "Doc message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Doc message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/image": {
      "post": {
        "description": "Image message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Image message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/livelocation": {
      "post": {
        "description": "Live Location message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Location message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageLiveLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/location": {
      "post": {
        "description": "Location message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Location message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/text": {
      "post": {
        "description": "Text message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Text message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/message/video": {
      "post": {
        "description": "Video message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Video message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageVideo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/notify/connectivity": {
      "post": {
        "description": "Notify when phone is not connected",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "when the user logs out",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NotifyConnectivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/notify/logout": {
      "post": {
        "description": "Notify when user logs out",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "when the user logs out",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NotifyLogout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/notify/receive": {
      "post": {
        "description": "Notify when user receive the message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "when the user logs receive the message",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NotifyReceive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/number/{phoneNumber}/avatar": {
      "get": {
        "tags": [
          "Number"
        ],
        "operationId": "GetAvatar",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile Data",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/number/{phoneNumber}/chats": {
      "get": {
        "description": "Get chats for specific number",
        "tags": [
          "Number"
        ],
        "operationId": "getChats",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "the number of messages in one query, max 300",
            "name": "numberOfMessages",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "suppy this to load messages before this messageId",
            "name": "beforeMessageId",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "fromMe needs to be supplied if beforeMessagId is given",
            "name": "fromMe",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return chats for the specific",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChatItem"
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/number/{phoneNumber}/haswhatsapp": {
      "get": {
        "tags": [
          "Number"
        ],
        "operationId": "hasWhatsApp",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if the number has whatsapp",
            "schema": {
              "type": "object",
              "required": [
                "hasWhatsApp"
              ],
              "properties": {
                "hasWhatsApp": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/number/{phoneNumber}/online": {
      "get": {
        "tags": [
          "Number"
        ],
        "operationId": "isOnline",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return if the user is online",
            "schema": {
              "type": "object",
              "required": [
                "isOnline"
              ],
              "properties": {
                "isOnline": {
                  "type": "boolean"
                },
                "lastSeen": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/power/battery": {
      "post": {
        "description": "Contact message hook",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Hooks"
        ],
        "parameters": [
          {
            "description": "Contact message body",
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessageBattery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 else the api will retry"
          }
        }
      }
    },
    "/profile/contacts": {
      "get": {
        "description": "Get Contacts for the user",
        "tags": [
          "Profile"
        ],
        "operationId": "getContacts",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts for user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactItem"
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/hook/set": {
      "post": {
        "description": "Set Hook for callbacks, refer hooks section for all hooks which will be called",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "setHook",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "name": "sessionId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "uri",
            "name": "hookURL",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/logout": {
      "post": {
        "description": "The user will be logged out with his session cleared from DB, you will need to rescan and reset the webhook to reconnect the user",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "logout",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/me": {
      "get": {
        "description": "Get Scanned users profile pic and his phone number",
        "tags": [
          "Profile"
        ],
        "operationId": "profile",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile Data",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/phone/connect": {
      "post": {
        "description": "Connect using Session Id used while succesfull scan",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "connect",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/phone/disconnect": {
      "post": {
        "description": "Disconnect Session Id used while succesfull scan",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "disconnect",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/phone/isconnected": {
      "get": {
        "description": "Return true if users phone is connected to internet and whats app web",
        "tags": [
          "Profile"
        ],
        "operationId": "isConnected",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id used while succesfull scan",
            "name": "sessionId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if the number has whatsapp",
            "schema": {
              "type": "object",
              "required": [
                "isConnected"
              ],
              "properties": {
                "isConnected": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/profile/scanqr": {
      "post": {
        "description": "Create a \u003cb\u003eUUID4\u003c/b\u003e identifier to use as sessionId. you will need to use this for every subsequent call, or use this [ScanQR](/qrcode) link",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "Profile"
        ],
        "operationId": "scanQr",
        "parameters": [
          {
            "type": "string",
            "format": "uuid4",
            "description": "Session Id will used associate with phonenumber scanned, use UUID4",
            "name": "sessionId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "uri",
            "description": "proxy host url",
            "name": "proxyURL",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Base64 string",
            "schema": {
              "$ref": "#/definitions/QRCode"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/ack/read": {
      "post": {
        "description": "Send Read Reciept",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendRead",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReadAck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return chats for the specific"
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/audio": {
      "post": {
        "description": "Send audio message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendAudio",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudioMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/audiorecord": {
      "post": {
        "description": "Send audio record message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendAudioRecord",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudioMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/doc": {
      "post": {
        "description": "Send doc message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendDoc",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/image": {
      "post": {
        "description": "Send Image Message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendImage",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/link": {
      "post": {
        "description": "Send Link Preview",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "SendLink",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/location": {
      "post": {
        "description": "Send location message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendLocation",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/text": {
      "post": {
        "description": "Send text message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendText",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/vcard": {
      "post": {
        "description": "Send SendVcard Document",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "SendVcard",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send/video": {
      "post": {
        "description": "Send video message",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Send"
        ],
        "operationId": "sendVideo",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VideoMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of broadcast",
            "schema": {
              "$ref": "#/definitions/BroadcastStatus"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AudioMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "audio",
        "numberReplyIds"
      ],
      "properties": {
        "audio": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://file-examples.com/wp-content/uploads/2017/11/file_example_MP3_700KB.mp3"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "BroadcastStatus": {
      "type": "object",
      "properties": {
        "broadcastId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "processing",
            "sent"
          ]
        }
      }
    },
    "ChatItem": {
      "type": "object",
      "properties": {
        "audio": {
          "type": "string"
        },
        "audioLength": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "doc": {
          "type": "string"
        },
        "docTitle": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "imageThumb": {
          "type": "string"
        },
        "messageContext": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "messageType": {
          "type": "string",
          "enum": [
            "TEXT",
            "IMAGE",
            "VIDEO",
            "AUDIO",
            "DOC",
            "LOCATION"
          ]
        },
        "pageCount": {
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "video": {
          "type": "string"
        },
        "videoThumb": {
          "type": "string"
        }
      }
    },
    "ContactItem": {
      "type": "object",
      "required": [
        "number",
        "name"
      ],
      "properties": {
        "name": {
          "description": "Contact Name",
          "type": "string"
        },
        "number": {
          "description": "Number with country code but without plus",
          "type": "string",
          "example": "14049190651"
        }
      }
    },
    "ContactMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "displayName",
        "number",
        "numberReplyIds"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "DocMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "doc",
        "title",
        "docType"
      ],
      "properties": {
        "doc": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
        },
        "docType": {
          "type": "string",
          "enum": [
            "DOC",
            "DOCX",
            "CSV",
            "XLS",
            "XLSX",
            "PDF",
            "PPT",
            "PPTX",
            "GZ",
            "ZIP",
            "7z",
            "TEXT"
          ]
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ImageMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "image",
        "numberReplyIds"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "image": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://cdn.pixabay.com/photo/2019/11/08/11/56/cat-4611189__340.jpg"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "LinkMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "title",
        "text",
        "url",
        "imageurl",
        "description",
        "messagetype",
        "numberReplyIds"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "imageurl": {
          "type": "string"
        },
        "messagetype": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "LocationMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "lat",
        "lng",
        "numberReplyIds"
      ],
      "properties": {
        "lat": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "MessageAudio": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "audio"
      ],
      "properties": {
        "audio": {
          "type": "string"
        },
        "audioLength": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        }
      }
    },
    "MessageBattery": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "plugged",
        "powersave",
        "percentage"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "plugged": {
          "type": "boolean"
        },
        "powersave": {
          "type": "boolean"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "MessageContact": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "displayName": {
          "type": "string"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "vcard": {
          "type": "string"
        }
      }
    },
    "MessageContext": {
      "type": "object",
      "required": [
        "isForwarded"
      ],
      "properties": {
        "isForwarded": {
          "type": "boolean"
        },
        "participant": {
          "type": "string"
        },
        "productMessageCurrencyCode": {
          "type": "string"
        },
        "productMessageDescription": {
          "type": "string"
        },
        "productMessageId": {
          "type": "string"
        },
        "productMessagePrice": {
          "type": "string"
        },
        "productMessageRetailerId": {
          "type": "string"
        },
        "productMessageTitle": {
          "type": "string"
        },
        "productMessageType": {
          "type": "boolean"
        },
        "productMessageUrl": {
          "type": "string"
        },
        "quotedMessageId": {
          "type": "string"
        }
      }
    },
    "MessageDoc": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "doc": {
          "type": "string"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "pageCount": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MessageImage": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "thumbnail",
        "image"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "image": {
          "type": "string"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "MessageInfo": {
      "type": "object",
      "required": [
        "fromMe",
        "from",
        "to",
        "messageId",
        "owner"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "fromMe": {
          "type": "boolean"
        },
        "messageId": {
          "type": "string"
        },
        "owner": {
          "type": "object",
          "required": [
            "number",
            "sessionId"
          ],
          "properties": {
            "number": {
              "type": "string"
            },
            "sessionId": {
              "type": "string"
            }
          }
        },
        "pushName": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "MessageInfoOwner": {
      "type": "object",
      "required": [
        "number",
        "sessionId"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      }
    },
    "MessageItem": {
      "type": "object",
      "required": [
        "id",
        "fromMe"
      ],
      "properties": {
        "fromMe": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "MessageLiveLocation": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "accuracyMeters": {
          "type": "integer",
          "format": "int32"
        },
        "caption": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "degreesClockwiseFromMagneticNorth": {
          "type": "integer",
          "format": "int32"
        },
        "latitudeDegree": {
          "type": "number"
        },
        "longituteDegree": {
          "type": "number"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "speedMPH": {
          "type": "number"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "MessageLocation": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "latitudeDegree": {
          "type": "number"
        },
        "longituteDegree": {
          "type": "number"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "MessageText": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "text"
      ],
      "properties": {
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "MessageVideo": {
      "type": "object",
      "required": [
        "messageInfo",
        "contextInfo",
        "thumbnail",
        "video"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "contextInfo": {
          "$ref": "#/definitions/MessageContext"
        },
        "messageInfo": {
          "$ref": "#/definitions/MessageInfo"
        },
        "thumbnail": {
          "type": "string"
        },
        "video": {
          "type": "string"
        }
      }
    },
    "NotifyConnectivity": {
      "type": "object",
      "required": [
        "isConnected",
        "sessionId",
        "number"
      ],
      "properties": {
        "isConnected": {
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "NotifyLogout": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "timestamp"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NotifyReceive": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "to",
        "timestamp"
      ],
      "properties": {
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "NumberReplyIds": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "number": {
          "description": "Number with country code but without plus",
          "type": "string",
          "example": "14049190651"
        },
        "replyTo": {
          "$ref": "#/definitions/MessageItem"
        }
      }
    },
    "Profile": {
      "type": "object",
      "required": [
        "phoneNumber"
      ],
      "properties": {
        "phoneNumber": {
          "type": "string"
        },
        "profilePic": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "QRCode": {
      "type": "object",
      "properties": {
        "base64": {
          "type": "string"
        }
      }
    },
    "ReadAck": {
      "type": "object",
      "required": [
        "sessionId",
        "number",
        "messageId"
      ],
      "properties": {
        "messageId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        }
      }
    },
    "TextMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "text",
        "numberReplyIds"
      ],
      "properties": {
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "VideoMessage": {
      "type": "object",
      "required": [
        "sessionId",
        "video",
        "numberReplyIds"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "numberReplyIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberReplyIds"
          }
        },
        "sessionId": {
          "type": "string",
          "format": "uuid4"
        },
        "video": {
          "description": "Fully qualified url",
          "type": "string",
          "format": "uri",
          "example": "https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_480_1_5MG.mp4"
        },
        "videoThumbnail": {
          "description": "Fully qualified url for thumbnail",
          "type": "string",
          "format": "uri"
        }
      }
    }
  },
  "parameters": {
    "sessionIdParam": {
      "type": "string",
      "format": "uuid4",
      "name": "sessionId",
      "in": "formData",
      "required": true
    }
  },
  "responses": {
    "ErrorResponse": {
      "description": "Error Response",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
