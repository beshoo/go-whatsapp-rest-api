// Code generated by go-swagger; DO NOT EDIT.

package send

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bitbucket.org/rockyOO7/wa-api/gen/models"
)

// SendDocOKCode is the HTTP code returned for type SendDocOK
const SendDocOKCode int = 200

/*SendDocOK Returns status of broadcast

swagger:response sendDocOK
*/
type SendDocOK struct {

	/*
	  In: Body
	*/
	Payload *models.BroadcastStatus `json:"body,omitempty"`
}

// NewSendDocOK creates SendDocOK with default headers values
func NewSendDocOK() *SendDocOK {

	return &SendDocOK{}
}

// WithPayload adds the payload to the send doc o k response
func (o *SendDocOK) WithPayload(payload *models.BroadcastStatus) *SendDocOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send doc o k response
func (o *SendDocOK) SetPayload(payload *models.BroadcastStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendDocOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SendDocDefault Error Response

swagger:response sendDocDefault
*/
type SendDocDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSendDocDefault creates SendDocDefault with default headers values
func NewSendDocDefault(code int) *SendDocDefault {
	if code <= 0 {
		code = 500
	}

	return &SendDocDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the send doc default response
func (o *SendDocDefault) WithStatusCode(code int) *SendDocDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the send doc default response
func (o *SendDocDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the send doc default response
func (o *SendDocDefault) WithPayload(payload *models.Error) *SendDocDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send doc default response
func (o *SendDocDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendDocDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
