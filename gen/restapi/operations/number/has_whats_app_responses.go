// Code generated by go-swagger; DO NOT EDIT.

package number

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bitbucket.org/rockyOO7/wa-api/gen/models"
)

// HasWhatsAppOKCode is the HTTP code returned for type HasWhatsAppOK
const HasWhatsAppOKCode int = 200

/*HasWhatsAppOK Returns true if the number has whatsapp

swagger:response hasWhatsAppOK
*/
type HasWhatsAppOK struct {

	/*
	  In: Body
	*/
	Payload *HasWhatsAppOKBody `json:"body,omitempty"`
}

// NewHasWhatsAppOK creates HasWhatsAppOK with default headers values
func NewHasWhatsAppOK() *HasWhatsAppOK {

	return &HasWhatsAppOK{}
}

// WithPayload adds the payload to the has whats app o k response
func (o *HasWhatsAppOK) WithPayload(payload *HasWhatsAppOKBody) *HasWhatsAppOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the has whats app o k response
func (o *HasWhatsAppOK) SetPayload(payload *HasWhatsAppOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HasWhatsAppOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*HasWhatsAppDefault Error Response

swagger:response hasWhatsAppDefault
*/
type HasWhatsAppDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHasWhatsAppDefault creates HasWhatsAppDefault with default headers values
func NewHasWhatsAppDefault(code int) *HasWhatsAppDefault {
	if code <= 0 {
		code = 500
	}

	return &HasWhatsAppDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the has whats app default response
func (o *HasWhatsAppDefault) WithStatusCode(code int) *HasWhatsAppDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the has whats app default response
func (o *HasWhatsAppDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the has whats app default response
func (o *HasWhatsAppDefault) WithPayload(payload *models.Error) *HasWhatsAppDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the has whats app default response
func (o *HasWhatsAppDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HasWhatsAppDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
