// Code generated by go-swagger; DO NOT EDIT.

package hooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostPowerBatteryHandlerFunc turns a function with the right signature into a post power battery handler
type PostPowerBatteryHandlerFunc func(PostPowerBatteryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostPowerBatteryHandlerFunc) Handle(params PostPowerBatteryParams) middleware.Responder {
	return fn(params)
}

// PostPowerBatteryHandler interface for that can handle valid post power battery params
type PostPowerBatteryHandler interface {
	Handle(PostPowerBatteryParams) middleware.Responder
}

// NewPostPowerBattery creates a new http.Handler for the post power battery operation
func NewPostPowerBattery(ctx *middleware.Context, handler PostPowerBatteryHandler) *PostPowerBattery {
	return &PostPowerBattery{Context: ctx, Handler: handler}
}

/*PostPowerBattery swagger:route POST /power/battery Hooks postPowerBattery

Contact message hook

*/
type PostPowerBattery struct {
	Context *middleware.Context
	Handler PostPowerBatteryHandler
}

func (o *PostPowerBattery) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostPowerBatteryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
