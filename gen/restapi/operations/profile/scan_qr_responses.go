// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bitbucket.org/rockyOO7/wa-api/gen/models"
)

// ScanQrOKCode is the HTTP code returned for type ScanQrOK
const ScanQrOKCode int = 200

/*ScanQrOK Base64 string

swagger:response scanQrOK
*/
type ScanQrOK struct {

	/*
	  In: Body
	*/
	Payload *models.QRCode `json:"body,omitempty"`
}

// NewScanQrOK creates ScanQrOK with default headers values
func NewScanQrOK() *ScanQrOK {

	return &ScanQrOK{}
}

// WithPayload adds the payload to the scan qr o k response
func (o *ScanQrOK) WithPayload(payload *models.QRCode) *ScanQrOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the scan qr o k response
func (o *ScanQrOK) SetPayload(payload *models.QRCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ScanQrOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ScanQrDefault Error Response

swagger:response scanQrDefault
*/
type ScanQrDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewScanQrDefault creates ScanQrDefault with default headers values
func NewScanQrDefault(code int) *ScanQrDefault {
	if code <= 0 {
		code = 500
	}

	return &ScanQrDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the scan qr default response
func (o *ScanQrDefault) WithStatusCode(code int) *ScanQrDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the scan qr default response
func (o *ScanQrDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the scan qr default response
func (o *ScanQrDefault) WithPayload(payload *models.Error) *ScanQrDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the scan qr default response
func (o *ScanQrDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ScanQrDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
