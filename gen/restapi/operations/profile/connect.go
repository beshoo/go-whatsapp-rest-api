// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ConnectHandlerFunc turns a function with the right signature into a connect handler
type ConnectHandlerFunc func(ConnectParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ConnectHandlerFunc) Handle(params ConnectParams) middleware.Responder {
	return fn(params)
}

// ConnectHandler interface for that can handle valid connect params
type ConnectHandler interface {
	Handle(ConnectParams) middleware.Responder
}

// NewConnect creates a new http.Handler for the connect operation
func NewConnect(ctx *middleware.Context, handler ConnectHandler) *Connect {
	return &Connect{Context: ctx, Handler: handler}
}

/*Connect swagger:route POST /profile/phone/connect Profile connect

Connect using Session Id used while succesfull scan

*/
type Connect struct {
	Context *middleware.Context
	Handler ConnectHandler
}

func (o *Connect) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewConnectParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
