// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bitbucket.org/rockyOO7/wa-api/gen/models"
)

// IsConnectedOKCode is the HTTP code returned for type IsConnectedOK
const IsConnectedOKCode int = 200

/*IsConnectedOK Returns true if the number has whatsapp

swagger:response isConnectedOK
*/
type IsConnectedOK struct {

	/*
	  In: Body
	*/
	Payload *IsConnectedOKBody `json:"body,omitempty"`
}

// NewIsConnectedOK creates IsConnectedOK with default headers values
func NewIsConnectedOK() *IsConnectedOK {

	return &IsConnectedOK{}
}

// WithPayload adds the payload to the is connected o k response
func (o *IsConnectedOK) WithPayload(payload *IsConnectedOKBody) *IsConnectedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is connected o k response
func (o *IsConnectedOK) SetPayload(payload *IsConnectedOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsConnectedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*IsConnectedDefault Error Response

swagger:response isConnectedDefault
*/
type IsConnectedDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIsConnectedDefault creates IsConnectedDefault with default headers values
func NewIsConnectedDefault(code int) *IsConnectedDefault {
	if code <= 0 {
		code = 500
	}

	return &IsConnectedDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the is connected default response
func (o *IsConnectedDefault) WithStatusCode(code int) *IsConnectedDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the is connected default response
func (o *IsConnectedDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the is connected default response
func (o *IsConnectedDefault) WithPayload(payload *models.Error) *IsConnectedDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is connected default response
func (o *IsConnectedDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsConnectedDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
