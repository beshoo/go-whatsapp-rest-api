// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MessageBattery message battery
//
// swagger:model MessageBattery
type MessageBattery struct {

	// number
	// Required: true
	Number *string `json:"number"`

	// percentage
	// Required: true
	Percentage *int64 `json:"percentage"`

	// plugged
	// Required: true
	Plugged *bool `json:"plugged"`

	// powersave
	// Required: true
	Powersave *bool `json:"powersave"`

	// session Id
	// Required: true
	// Format: uuid4
	SessionID *strfmt.UUID4 `json:"sessionId"`
}

// Validate validates this message battery
func (m *MessageBattery) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePercentage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlugged(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePowersave(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSessionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MessageBattery) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("number", "body", m.Number); err != nil {
		return err
	}

	return nil
}

func (m *MessageBattery) validatePercentage(formats strfmt.Registry) error {

	if err := validate.Required("percentage", "body", m.Percentage); err != nil {
		return err
	}

	return nil
}

func (m *MessageBattery) validatePlugged(formats strfmt.Registry) error {

	if err := validate.Required("plugged", "body", m.Plugged); err != nil {
		return err
	}

	return nil
}

func (m *MessageBattery) validatePowersave(formats strfmt.Registry) error {

	if err := validate.Required("powersave", "body", m.Powersave); err != nil {
		return err
	}

	return nil
}

func (m *MessageBattery) validateSessionID(formats strfmt.Registry) error {

	if err := validate.Required("sessionId", "body", m.SessionID); err != nil {
		return err
	}

	if err := validate.FormatOf("sessionId", "body", "uuid4", m.SessionID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MessageBattery) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MessageBattery) UnmarshalBinary(b []byte) error {
	var res MessageBattery
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
